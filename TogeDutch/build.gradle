// 프로젝트 플러그인 의존성 관리를 위한 설정
buildscript{
    // ext
    // 1. build.gradle에서 사용하는 전역변수를 설정하겠다는 의미
    // 2. springBootVersion 전역변수를 생성 및 값 설정 (AOP로 부여받겠다는 뜻)
    ext{
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories{
        mavenCentral()
        jcenter()
    }
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 자바와 스프링 부트를 사용하기 위한 필수 플러그인
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // 필수 : 스프링 부트의 의존성을 관리하는 플러그인

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

// repositories는 각종 의존성(라이브럴)를 어떤 원격 저장소에서 받을지를 정한다
repositories {
    // 기본적으로 mavenCentral 많이 사용 > 최근 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용
    mavenCentral()
}

// 프로젝트 개발에 필요한 의존성들을 선언하는 곳
dependencies {
    implementation 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // 추가 시작
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'commons-io:commons-io:2.11.0'    /* Apache commons-io */
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    compileOnly(group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1')
    compileOnly('io.jsonwebtoken:jjwt:0.9.1')
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    implementation 'com.google.code.gson:gson:2.8.7'
    compileOnly(group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0')
    implementation(group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0')
    implementation('io.jsonwebtoken:jjwt:0.9.0')

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // 추가 끝

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}